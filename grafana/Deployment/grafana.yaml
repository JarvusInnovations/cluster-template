apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: grafana
    app.kubernetes.io/version: 8.3.6
    helm.sh/chart: grafana-6.22.0
  name: grafana
  namespace: grafana
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        checksum/config: e276db0cccc677a40d8e56a79f0bdcc9ec35aee3079bab1d1a0034e61445ba85
        checksum/dashboards-json-config: 7899637db4d7618be7825c7c1c3578af5428fc8fa303d0361bd78082b58d0baa
        checksum/sc-dashboard-provider-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
      labels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  key: admin-user
                  name: grafana-initial-admin
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: admin-password
                  name: grafana-initial-admin
            - name: GF_PATHS_DATA
              value: /var/lib/grafana/
            - name: GF_PATHS_LOGS
              value: /var/log/grafana
            - name: GF_PATHS_PLUGINS
              value: /var/lib/grafana/plugins
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          image: 'grafana/grafana:8.3.6'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          name: grafana
          ports:
            - containerPort: 80
              name: service
              protocol: TCP
            - containerPort: 3000
              name: grafana
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources: {}
          volumeMounts:
            - mountPath: /etc/grafana/grafana.ini
              name: config
              subPath: grafana.ini
            - mountPath: /var/lib/grafana
              name: storage
            - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              name: config
              subPath: datasources.yaml
            - mountPath: /etc/grafana/provisioning/dashboards/dashboardproviders.yaml
              name: config
              subPath: dashboardproviders.yaml
      enableServiceLinks: true
      initContainers:
        - command:
            - chown
            - '-R'
            - '472:472'
            - /var/lib/grafana
          image: 'busybox:1.31.1'
          imagePullPolicy: IfNotPresent
          name: init-chown-data
          resources: {}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: storage
        - args:
            - '-c'
            - >-
              mkdir -p /var/lib/grafana/dashboards/default && /bin/sh -x
              /etc/grafana/download_dashboards.sh
          command:
            - /bin/sh
          env: null
          image: 'curlimages/curl:7.73.0'
          imagePullPolicy: IfNotPresent
          name: download-dashboards
          resources: {}
          volumeMounts:
            - mountPath: /etc/grafana/download_dashboards.sh
              name: config
              subPath: download_dashboards.sh
            - mountPath: /var/lib/grafana
              name: storage
      securityContext:
        fsGroup: 472
        runAsGroup: 472
        runAsUser: 472
      serviceAccountName: grafana
      volumes:
        - configMap:
            name: grafana
          name: config
        - configMap:
            name: grafana-dashboards-default
          name: dashboards-default
        - name: storage
          persistentVolumeClaim:
            claimName: grafana
